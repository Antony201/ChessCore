# Generated by Django 3.0.7 on 2021-03-14 17:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fen', models.TextField(default='rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1')),
                ('board_fen', models.TextField(default='rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR')),
                ('board_fen_flipped', models.TextField(default='RNBKQBNR/PPPPPPPP/8/8/8/8/pppppppp/rnbkqbnr')),
                ('ep_square', models.IntegerField(null=True)),
                ('castling_xfen', models.TextField(null=True)),
                ('castling_rights', models.TextField(null=True)),
                ('turn', models.BooleanField(default=True)),
                ('fullmove_number', models.IntegerField(default=1)),
                ('halfmove_clock', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('game_uuid', models.UUIDField(default=uuid.uuid4)),
            ],
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim_type', models.CharField(choices=[('tr', 'Threefold repetition'), ('ft', 'Fifty moves'), ('d', 'Draw')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='ClaimItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Elo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=1200)),
                ('previous_rating', models.IntegerField(default=1200)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('draws', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
            ],
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('piece_type', models.CharField(choices=[('P', 'Black pawn'), ('N', 'Black knight'), ('B', 'Black bishop'), ('R', 'Black rook'), ('Q', 'Black queen'), ('K', 'Black king'), ('p', 'White pawn'), ('n', 'White knight'), ('b', 'White bishop'), ('r', 'White rook'), ('q', 'White queen'), ('k', 'White king')], max_length=1)),
                ('square', models.CharField(choices=[(0, 'A1'), (1, 'B1'), (2, 'C1'), (3, 'D1'), (4, 'E1'), (5, 'F1'), (6, 'G1'), (7, 'H1'), (8, 'A2'), (9, 'B2'), (10, 'C2'), (11, 'D2'), (12, 'E2'), (13, 'F2'), (14, 'G2'), (15, 'H2'), (16, 'A3'), (17, 'B3'), (18, 'C3'), (19, 'D3'), (20, 'E3'), (21, 'F3'), (22, 'G3'), (23, 'H3'), (24, 'A4'), (25, 'B4'), (26, 'C4'), (27, 'D4'), (28, 'E4'), (29, 'F4'), (30, 'G4'), (31, 'H4'), (32, 'A5'), (33, 'B5'), (34, 'C5'), (35, 'D5'), (36, 'E5'), (37, 'F5'), (38, 'G5'), (39, 'H5'), (40, 'A6'), (41, 'B6'), (42, 'C6'), (43, 'D6'), (44, 'E6'), (45, 'F6'), (46, 'G6'), (47, 'H6'), (48, 'A7'), (49, 'B7'), (50, 'C7'), (51, 'D7'), (52, 'E7'), (53, 'F7'), (54, 'G7'), (55, 'H7'), (56, 'A8'), (57, 'B8'), (58, 'C8'), (59, 'D8'), (60, 'E8'), (61, 'F8'), (62, 'G8'), (63, 'H8')], max_length=2, null=True)),
                ('captured', models.BooleanField(default=False)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Board')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.TextField(choices=[('White wins', 'White wins'), ('Black wins', 'Black wins'), ('Draw', 'Drawn game'), ('In progress', 'Game still in progress, game abandoned, or result otherwise unknown'), ('Scheduled', 'Game scheduled')], default='Scheduled')),
                ('termination', models.TextField(choices=[('Abandoned', 'Abandoned game.'), ('Adjudication', 'Result due to third party adjudication process.'), ('Death', 'One or both players died during the course of this game.'), ('Emergency', 'Game concluded due to unforeseen circumstances.'), ('Normal', 'Game terminated in a normal fashion.'), ('Rules infraction', "Administrative forfeit due to losing player's failure to observe either the Laws of Chess or the event regulations."), ('Time forfeit', "Loss due to losing player's failure to meet time control requirements."), ('Capitulation', 'Player capitulated.'), ('Unterminated', 'Game not terminated.')], default='Unterminated')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('piece_file', models.CharField(max_length=1)),
                ('piece_rank', models.CharField(max_length=1)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Piece')),
            ],
        ),
        migrations.CreateModel(
            name='Move',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_square', models.CharField(max_length=2)),
                ('to_square', models.TextField(max_length=2)),
                ('board', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Board')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('white_player_points', models.FloatField(blank=True, null=True)),
                ('black_player_points', models.FloatField(blank=True, null=True)),
                ('black_player_broadcast_board', models.CharField(blank=True, max_length=300, null=True)),
                ('white_player_broadcast_board', models.CharField(blank=True, max_length=300, null=True)),
                ('black_player_broadcast', models.CharField(blank=True, max_length=300, null=True)),
                ('white_player_broadcast', models.CharField(blank=True, max_length=300, null=True)),
                ('black_player_can_claim_draw', models.BooleanField(default=True)),
                ('white_player_can_claim_draw', models.BooleanField(default=True)),
                ('white_player_time_spent', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('black_player_time_spent', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('broadcast_type', models.CharField(choices=[('none', 'No stream'), ('cam', 'Camera'), ('board', 'Board'), ('both', 'Camera and desktop')], max_length=100)),
                ('black_player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='black_player', to=settings.AUTH_USER_MODEL)),
                ('board', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Board')),
                ('result', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Result')),
            ],
        ),
    ]
